stages:
  - init_network
  - build
  - test
  - deploy

variables:
  SECURE_FILES_DOWNLOAD_PATH: './'

before_script:
  #- echo "http://mirror.yandex.ru/mirrors/alpine/v3.21/main" > /etc/apk/repositories
  - apk update && apk add --no-cache curl bash
  - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
  - mkdir -p ./certs
  - mv jwt-private.pem jwt-public.pem ./certs/
  
init_network:
  stage: init_network
  script:
    - echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-—Å–µ—Ç–∏ backend_net..."
    - docker network inspect backend_net || docker network create backend_net
    - echo "‚úÖ –°–µ—Ç—å backend_net –≥–æ—Ç–æ–≤–∞."
  tags:
    - docker
  only:
    - main

build:
  stage: build
  script:
    - echo "–ë–∏–ª–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è fastapi" 
    - docker-compose -f docker-compose-ci_prod.yaml build app_ssam
  only:
    - main

test:
  stage: test
  script:
    - echo "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ —Ç–µ—Å—Ç–æ–≤–æ–π –±–¥"
    - docker-compose -f docker-compose-ci_prod.yaml up postgres redis -d
    - sleep 10
    - echo "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤"
    - docker-compose -f docker-compose-ci_prod.yaml run --rm app_ssam docker/app.sh pytest 
  only:
    - main

deploy:
  stage: deploy
  script:
    - echo "–î–µ–ø–ª–æ–π"
    - docker compose --env-file .env.ci_prod -f docker-compose-ci_prod.yaml up -d
  only:
    - main
  when: on_success